{"ast":null,"code":"var _jsxFileName = \"E:\\\\Faks\\\\4.god\\\\napredne baze\\\\KNJIGE\\\\frontknjige (3)\\\\frontknjige\\\\src\\\\stranice\\\\DodavanjeKnjige.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DodavanjeKnjige({\n  isOpen,\n  onClose\n}) {\n  _s();\n  const [autori, setAutori] = useState([]);\n  const [zanrovi, setZanrovi] = useState([]);\n  const [knjiga, setKnjiga] = useState({\n    naslov: \"\",\n    opis: \"\",\n    slika: \"\",\n    brojStranica: \"\",\n    autor: \"\",\n    zanr: \"\"\n  });\n  const [poruka, setPoruka] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    fetch(\"http://localhost:5108/Autor/vratiSveAutore\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Bearer`${sessionStorage.getItem(\"jwt\")}`\n      }\n    }).then(res => res.json()).then(data => setAutori(data)).catch(err => console.error(err));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:5108/Zanr/vratiSveZanrove\").then(res => res.json()).then(data => setZanrovi(data)).catch(err => console.error(err));\n  }, []);\n  const handleChange = e => {\n    setKnjiga({\n      ...knjiga,\n      [e.target.name]: e.target.value\n    });\n\n    // Ukloni grešku ako je polje popunjeno\n    if (e.target.value.trim() !== \"\") {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        [e.target.name]: undefined\n      }));\n    }\n  };\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setKnjiga({\n          ...knjiga,\n          slika: reader.result\n        });\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          slika: undefined\n        })); // Uklanja grešku slike ako je dodata\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n    if (!knjiga.naslov) newErrors.naslov = \"*Title is required\";\n    if (!knjiga.opis) newErrors.opis = \"*Description is required\";\n    if (!knjiga.brojStranica) newErrors.brojStranica = \"*Number of pages is required\";\n    if (!knjiga.autor) newErrors.autor = \"*Author is required\";\n    if (!knjiga.zanr) newErrors.zanr = \"*Genre is required\";\n    if (!knjiga.slika) newErrors.slika = \"*Book image is required\";\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5108/Knjiga/dodavanjeKnjige\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: Bearer`${sessionStorage.getItem(\"jwt\")}`\n        },\n        body: JSON.stringify(knjiga)\n      });\n      if (res.ok) {\n        setPoruka(\"Knjiga je uspešno dodata!\");\n        setKnjiga({\n          naslov: \"\",\n          opis: \"\",\n          slika: \"\",\n          brojStranica: \"\",\n          autor: \"\",\n          zanr: \"\"\n        });\n        setErrors({});\n        setTimeout(() => {\n          window.location.reload(); //osvezavanje\n        }, 1000);\n      } else {\n        const errMessage = await res.text();\n        setPoruka(errMessage);\n      }\n    } catch (err) {\n      setPoruka(\"Došlo je do greške prilikom dodavanja knjige.\");\n    }\n    onClose();\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg p-6 w-96 shadow-lg relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-center text-black mb-4\",\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"naslov\",\n          placeholder: \"Title\",\n          value: knjiga.naslov,\n          onChange: handleChange,\n          className: `w-full p-2 border rounded mb-2 text-black ${errors.naslov ? \"border-red-500\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), errors.naslov && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.naslov\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"opis\",\n          placeholder: \"Description\",\n          value: knjiga.opis,\n          onChange: handleChange,\n          className: `w-full p-2 border rounded mb-2 text-black ${errors.opis ? \"border-red-500\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), errors.opis && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.opis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"brojStranica\",\n          placeholder: \"Number of pages\",\n          value: knjiga.brojStranica,\n          onChange: handleChange,\n          className: `w-full p-2 border rounded mb-2 text-black ${errors.brojStranica ? \"border-red-500\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), errors.brojStranica && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.brojStranica\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"autor\",\n          value: knjiga.autor,\n          onChange: handleChange,\n          className: `w-full p-2 border rounded mb-2 text-black ${errors.autor ? \"border-red-500\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), autori.map(autor => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: autor.id,\n            children: autor.punoIme\n          }, autor.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), errors.autor && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.autor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"zanr\",\n          value: knjiga.zanr,\n          onChange: handleChange,\n          className: `w-full p-2 border rounded mb-2 text-black ${errors.zanr ? \"border-red-500\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), zanrovi.map(zanr => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: zanr.id,\n            children: zanr.naziv\n          }, zanr.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), errors.zanr && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.zanr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          className: \"w-full p-2 border rounded mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), errors.slika && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: errors.slika\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-full flex justify-center items-center border rounded mb-2 ${knjiga.slika ? \"h-40\" : \"h-0\"}`,\n          children: knjiga.slika && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: knjiga.slika,\n            alt: \"Slika knjige\",\n            className: \"w-28 h-40 object-cover rounded transition-all duration-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-6 py-3 bg-green-700 text-white rounded-lg border-none cursor-pointer hover:bg-green-600\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"px-6 py-3 bg-red-600 text-white rounded-lg border-none cursor-pointer hover:bg-red-500\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), poruka && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-red-500 mt-2\",\n        children: poruka\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(DodavanjeKnjige, \"cqCWHYfq8sjmnobp9EG00P2yQcs=\");\n_c = DodavanjeKnjige;\nexport default DodavanjeKnjige;\n\n// import { useState, useEffect } from \"react\";\n\n// function DodavanjeKnjige({ isOpen, onClose }) {\n//   const [autori, setAutori] = useState([]);\n//   const [zanrovi, setZanrovi] = useState([]);\n//   const [knjiga, setKnjiga] = useState({\n//     naslov: \"\",\n//     opis: \"\",\n//     slika: \"\",\n//     brojStranica: \"\",\n//     autor: \"\",\n//     zanr: \"\",\n//   });\n//   const [poruka, setPoruka] = useState(\"\");\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5108/Autor/vratiSveAutore\", {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${sessionStorage.getItem(\"jwt\")}`,\n//       },\n//     })\n//       .then((res) => res.json())\n//       .then((data) => setAutori(data))\n//       .catch((err) => console.error(err));\n//   }, []);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5108/Zanr/vratiSveZanrove\")\n//       .then((res) => res.json())\n//       .then((data) => setZanrovi(data))\n//       .catch((err) => console.error(err));\n//   }, []);\n\n//   const handleChange = (e) => {\n//     setKnjiga({\n//       ...knjiga,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       const reader = new FileReader();\n//       reader.onload = () => {\n//         setKnjiga({ ...knjiga, slika: reader.result });\n//       };\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await fetch(\"http://localhost:5108/Knjiga/dodavanjeKnjige\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${sessionStorage.getItem(\"jwt\")}`,\n//         },\n//         body: JSON.stringify(knjiga),\n//       });\n//       if (res.ok) {\n//         setPoruka(\"Knjiga je uspešno dodata!\");\n//         setKnjiga({\n//           naslov: \"\",\n//           opis: \"\",\n//           slika: \"\",\n//           brojStranica: \"\",\n//           autor: \"\",\n//           zanr: \"\",\n//         });\n//         setTimeout(() => {\n//           window.location.reload(); //osvezavanje\n//         }, 1000);\n//       } else {\n//         const errMessage = await res.text();\n//         setPoruka(errMessage);\n//       }\n//     } catch (err) {\n//       setPoruka(\"Došlo je do greške prilikom dodavanja knjige.\");\n//     }\n//     onClose();\n//   };\n\n//   if (!isOpen) return null;\n\n//   return (\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\n//       <div className=\"bg-white rounded-lg p-6 w-96 shadow-lg relative\">\n//         <h2 className=\"text-xl font-bold text-center text-black mb-4\">\n//           Add Book\n//         </h2>\n//         <form onSubmit={handleSubmit}>\n//           <input\n//             type=\"text\"\n//             name=\"naslov\"\n//             placeholder=\"Title\"\n//             value={knjiga.naslov}\n//             onChange={handleChange}\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"opis\"\n//             placeholder=\"Description\"\n//             value={knjiga.opis}\n//             onChange={handleChange}\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\n//           />\n//           <input\n//             type=\"number\"\n//             name=\"brojStranica\"\n//             placeholder=\"Number of pages\"\n//             value={knjiga.brojStranica}\n//             onChange={handleChange}\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\n//           />\n//           <select\n//             name=\"autor\"\n//             value={knjiga.autor}\n//             onChange={handleChange}\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\n//           >\n//             <option value=\"\">Select an author</option>\n//             {autori.map((autor) => (\n//               <option key={autor.id} value={autor.id}>\n//                 {autor.punoIme}\n//               </option>\n//             ))}\n//           </select>\n\n//           <select\n//             name=\"zanr\"\n//             value={knjiga.zanr}\n//             onChange={handleChange}\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\n//           >\n//             <option value=\"\">Seleect a genre</option>\n//             {zanrovi.map((zanr) => (\n//               <option key={zanr.id} value={zanr.id}>\n//                 {zanr.naziv}\n//               </option>\n//             ))}\n//           </select>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             onChange={handleImageUpload}\n//             className=\"w-full p-2 border rounded mb-2\"\n//           />\n\n//           <div className={`w-full flex justify-center items-center border rounded mb-2 ${knjiga.slika ? \"h-40\" : \"h-0\"}`}>\n//             {knjiga.slika && (\n//               <img\n//                 src={knjiga.slika}\n//                 alt=\"Slika knjige\"\n//                 className=\"w-28 h-40 object-cover rounded transition-all duration-300\"\n//               />\n//             )}\n//           </div>\n//         <div className=\"flex justify-center space-x-4\">\n//         <button\n//             type=\"button\"\n//             onClick={handleSubmit}\n//             className=\"px-6 py-3 bg-green-700 text-white rounded-lg border-none cursor-pointer hover:bg-green-600\"\n//         >\n//             Save\n//         </button>\n\n//             <button\n//             type=\"button\"\n//             onClick={onClose}\n//             className=\"px-6 py-3 bg-red-600 text-white rounded-lg border-none cursor-pointer hover:bg-red-500\"\n//         >\n//             Cancel\n//         </button>\n\n//         </div>\n//         </form>\n//         {poruka && <p className=\"text-center text-red-500 mt-2\">{poruka}</p>}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default DodavanjeKnjige;\nvar _c;\n$RefreshReg$(_c, \"DodavanjeKnjige\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","DodavanjeKnjige","isOpen","onClose","_s","autori","setAutori","zanrovi","setZanrovi","knjiga","setKnjiga","naslov","opis","slika","brojStranica","autor","zanr","poruka","setPoruka","errors","setErrors","fetch","headers","Authorization","Bearer","sessionStorage","getItem","then","res","json","data","catch","err","console","error","handleChange","e","target","name","value","trim","prevErrors","undefined","handleImageUpload","file","files","reader","FileReader","onload","result","readAsDataURL","handleSubmit","preventDefault","newErrors","Object","keys","length","method","body","JSON","stringify","ok","setTimeout","window","location","reload","errMessage","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","map","id","punoIme","naziv","accept","src","alt","onClick","_c","$RefreshReg$"],"sources":["E:/Faks/4.god/napredne baze/KNJIGE/frontknjige (3)/frontknjige/src/stranice/DodavanjeKnjige.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction DodavanjeKnjige({ isOpen, onClose }) {\r\n  const [autori, setAutori] = useState([]);\r\n  const [zanrovi, setZanrovi] = useState([]);\r\n  const [knjiga, setKnjiga] = useState({\r\n    naslov: \"\",\r\n    opis: \"\",\r\n    slika: \"\",\r\n    brojStranica: \"\",\r\n    autor: \"\",\r\n    zanr: \"\",\r\n  });\r\n  const [poruka, setPoruka] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5108/Autor/vratiSveAutore\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: Bearer `${sessionStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setAutori(data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5108/Zanr/vratiSveZanrove\")\r\n      .then((res) => res.json())\r\n      .then((data) => setZanrovi(data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setKnjiga({\r\n      ...knjiga,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n     // Ukloni grešku ako je polje popunjeno\r\n     if (e.target.value.trim() !== \"\") {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [e.target.name]: undefined,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setKnjiga({ ...knjiga, slika: reader.result });\r\n        setErrors((prevErrors) => ({ ...prevErrors, slika: undefined })); // Uklanja grešku slike ako je dodata\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const newErrors = {};\r\n    if (!knjiga.naslov) newErrors.naslov = \"*Title is required\";\r\n    if (!knjiga.opis) newErrors.opis = \"*Description is required\";\r\n    if (!knjiga.brojStranica) newErrors.brojStranica = \"*Number of pages is required\";\r\n    if (!knjiga.autor) newErrors.autor = \"*Author is required\";\r\n    if (!knjiga.zanr) newErrors.zanr = \"*Genre is required\";\r\n    if(!knjiga.slika) newErrors.slika = \"*Book image is required\"\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5108/Knjiga/dodavanjeKnjige\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: Bearer `${sessionStorage.getItem(\"jwt\")}`,\r\n        },\r\n        body: JSON.stringify(knjiga),\r\n      });\r\n      if (res.ok) {\r\n        setPoruka(\"Knjiga je uspešno dodata!\");\r\n        setKnjiga({\r\n          naslov: \"\",\r\n          opis: \"\",\r\n          slika: \"\",\r\n          brojStranica: \"\",\r\n          autor: \"\",\r\n          zanr: \"\",\r\n        });\r\n        setErrors({})\r\n        setTimeout(() => {\r\n          window.location.reload(); //osvezavanje\r\n        }, 1000);\r\n      } else {\r\n        const errMessage = await res.text();\r\n        setPoruka(errMessage);\r\n      }\r\n    } catch (err) {\r\n      setPoruka(\"Došlo je do greške prilikom dodavanja knjige.\");\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-96 shadow-lg relative\">\r\n        <h2 className=\"text-xl font-bold text-center text-black mb-4\">\r\n          Add Book\r\n        </h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"naslov\"\r\n            placeholder=\"Title\"\r\n            value={knjiga.naslov}\r\n            onChange={handleChange}\r\n            className={`w-full p-2 border rounded mb-2 text-black ${\r\n              errors.naslov ? \"border-red-500\" : \"\"\r\n            }`}\r\n          />\r\n          {errors.naslov && <p className=\"text-red-500 text-sm\">{errors.naslov}</p>}\r\n  \r\n          <input\r\n            type=\"text\"\r\n            name=\"opis\"\r\n            placeholder=\"Description\"\r\n            value={knjiga.opis}\r\n            onChange={handleChange}\r\n            className={`w-full p-2 border rounded mb-2 text-black ${\r\n              errors.opis ? \"border-red-500\" : \"\"\r\n            }`}\r\n          />\r\n          {errors.opis && <p className=\"text-red-500 text-sm\">{errors.opis}</p>}\r\n  \r\n          <input\r\n            type=\"number\"\r\n            name=\"brojStranica\"\r\n            placeholder=\"Number of pages\"\r\n            value={knjiga.brojStranica}\r\n            onChange={handleChange}\r\n            className={`w-full p-2 border rounded mb-2 text-black ${\r\n              errors.brojStranica ? \"border-red-500\" : \"\"\r\n            }`}\r\n          />\r\n          {errors.brojStranica && <p className=\"text-red-500 text-sm\">{errors.brojStranica}</p>}\r\n  \r\n          <select\r\n            name=\"autor\"\r\n            value={knjiga.autor}\r\n            onChange={handleChange}\r\n            className={`w-full p-2 border rounded mb-2 text-black ${\r\n              errors.autor ? \"border-red-500\" : \"\"\r\n            }`}\r\n          >\r\n            <option value=\"\">Select an author</option>\r\n            {autori.map((autor) => (\r\n              <option key={autor.id} value={autor.id}>\r\n                {autor.punoIme}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.autor && <p className=\"text-red-500 text-sm\">{errors.autor}</p>}\r\n  \r\n          <select\r\n            name=\"zanr\"\r\n            value={knjiga.zanr}\r\n            onChange={handleChange}\r\n            className={`w-full p-2 border rounded mb-2 text-black ${\r\n              errors.zanr ? \"border-red-500\" : \"\"\r\n            }`}\r\n          >\r\n            <option value=\"\">Select a genre</option>\r\n            {zanrovi.map((zanr) => (\r\n              <option key={zanr.id} value={zanr.id}>\r\n                {zanr.naziv}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {errors.zanr && <p className=\"text-red-500 text-sm\">{errors.zanr}</p>}\r\n  \r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImageUpload}\r\n            className=\"w-full p-2 border rounded mb-2\"\r\n          />\r\n          {errors.slika && <p className=\"text-red-500\">{errors.slika}</p>}\r\n  \r\n          <div\r\n            className={`w-full flex justify-center items-center border rounded mb-2 ${\r\n              knjiga.slika ? \"h-40\" : \"h-0\"\r\n            }`}\r\n          >\r\n            {knjiga.slika && (\r\n              <img\r\n                src={knjiga.slika}\r\n                alt=\"Slika knjige\"\r\n                className=\"w-28 h-40 object-cover rounded transition-all duration-300\"\r\n              />\r\n            )}\r\n          </div>\r\n  \r\n          <div className=\"flex justify-center space-x-4\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-6 py-3 bg-green-700 text-white rounded-lg border-none cursor-pointer hover:bg-green-600\"\r\n            >\r\n              Save\r\n            </button>\r\n  \r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"px-6 py-3 bg-red-600 text-white rounded-lg border-none cursor-pointer hover:bg-red-500\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n        {poruka && <p className=\"text-center text-red-500 mt-2\">{poruka}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default DodavanjeKnjige;\r\n\r\n// import { useState, useEffect } from \"react\";\r\n\r\n// function DodavanjeKnjige({ isOpen, onClose }) {\r\n//   const [autori, setAutori] = useState([]);\r\n//   const [zanrovi, setZanrovi] = useState([]);\r\n//   const [knjiga, setKnjiga] = useState({\r\n//     naslov: \"\",\r\n//     opis: \"\",\r\n//     slika: \"\",\r\n//     brojStranica: \"\",\r\n//     autor: \"\",\r\n//     zanr: \"\",\r\n//   });\r\n//   const [poruka, setPoruka] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5108/Autor/vratiSveAutore\", {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: `Bearer ${sessionStorage.getItem(\"jwt\")}`,\r\n//       },\r\n//     })\r\n//       .then((res) => res.json())\r\n//       .then((data) => setAutori(data))\r\n//       .catch((err) => console.error(err));\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5108/Zanr/vratiSveZanrove\")\r\n//       .then((res) => res.json())\r\n//       .then((data) => setZanrovi(data))\r\n//       .catch((err) => console.error(err));\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     setKnjiga({\r\n//       ...knjiga,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleImageUpload = (e) => {\r\n//     const file = e.target.files[0];\r\n//     if (file) {\r\n//       const reader = new FileReader();\r\n//       reader.onload = () => {\r\n//         setKnjiga({ ...knjiga, slika: reader.result });\r\n//       };\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = await fetch(\"http://localhost:5108/Knjiga/dodavanjeKnjige\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${sessionStorage.getItem(\"jwt\")}`,\r\n//         },\r\n//         body: JSON.stringify(knjiga),\r\n//       });\r\n//       if (res.ok) {\r\n//         setPoruka(\"Knjiga je uspešno dodata!\");\r\n//         setKnjiga({\r\n//           naslov: \"\",\r\n//           opis: \"\",\r\n//           slika: \"\",\r\n//           brojStranica: \"\",\r\n//           autor: \"\",\r\n//           zanr: \"\",\r\n//         });\r\n//         setTimeout(() => {\r\n//           window.location.reload(); //osvezavanje\r\n//         }, 1000);\r\n//       } else {\r\n//         const errMessage = await res.text();\r\n//         setPoruka(errMessage);\r\n//       }\r\n//     } catch (err) {\r\n//       setPoruka(\"Došlo je do greške prilikom dodavanja knjige.\");\r\n//     }\r\n//     onClose();\r\n//   };\r\n\r\n//   if (!isOpen) return null;\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n//       <div className=\"bg-white rounded-lg p-6 w-96 shadow-lg relative\">\r\n//         <h2 className=\"text-xl font-bold text-center text-black mb-4\">\r\n//           Add Book\r\n//         </h2>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"naslov\"\r\n//             placeholder=\"Title\"\r\n//             value={knjiga.naslov}\r\n//             onChange={handleChange}\r\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"opis\"\r\n//             placeholder=\"Description\"\r\n//             value={knjiga.opis}\r\n//             onChange={handleChange}\r\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\r\n//           />\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"brojStranica\"\r\n//             placeholder=\"Number of pages\"\r\n//             value={knjiga.brojStranica}\r\n//             onChange={handleChange}\r\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\r\n//           />\r\n//           <select\r\n//             name=\"autor\"\r\n//             value={knjiga.autor}\r\n//             onChange={handleChange}\r\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\r\n//           >\r\n//             <option value=\"\">Select an author</option>\r\n//             {autori.map((autor) => (\r\n//               <option key={autor.id} value={autor.id}>\r\n//                 {autor.punoIme}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n\r\n//           <select\r\n//             name=\"zanr\"\r\n//             value={knjiga.zanr}\r\n//             onChange={handleChange}\r\n//             className=\"w-full p-2 border rounded mb-2 text-black\"\r\n//           >\r\n//             <option value=\"\">Seleect a genre</option>\r\n//             {zanrovi.map((zanr) => (\r\n//               <option key={zanr.id} value={zanr.id}>\r\n//                 {zanr.naziv}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             onChange={handleImageUpload}\r\n//             className=\"w-full p-2 border rounded mb-2\"\r\n//           />\r\n\r\n//           <div className={`w-full flex justify-center items-center border rounded mb-2 ${knjiga.slika ? \"h-40\" : \"h-0\"}`}>\r\n//             {knjiga.slika && (\r\n//               <img\r\n//                 src={knjiga.slika}\r\n//                 alt=\"Slika knjige\"\r\n//                 className=\"w-28 h-40 object-cover rounded transition-all duration-300\"\r\n//               />\r\n//             )}\r\n//           </div>\r\n//         <div className=\"flex justify-center space-x-4\">\r\n//         <button\r\n//             type=\"button\"\r\n//             onClick={handleSubmit}\r\n//             className=\"px-6 py-3 bg-green-700 text-white rounded-lg border-none cursor-pointer hover:bg-green-600\"\r\n//         >\r\n//             Save\r\n//         </button>\r\n\r\n//             <button\r\n//             type=\"button\"\r\n//             onClick={onClose}\r\n//             className=\"px-6 py-3 bg-red-600 text-white rounded-lg border-none cursor-pointer hover:bg-red-500\"\r\n//         >\r\n//             Cancel\r\n//         </button>\r\n\r\n//         </div>\r\n//         </form>\r\n//         {poruka && <p className=\"text-center text-red-500 mt-2\">{poruka}</p>}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default DodavanjeKnjige;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}